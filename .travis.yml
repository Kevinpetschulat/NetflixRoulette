$HOME/.m2/settings.xmllanguage: java


jobs:
  include:
    - stage: generator
      language: java
      install:
        - cp .travis.settings.xml $HOME/.m2/settings.xml
      script:
        - cd NetflixRouletteGenerator
        - mvn org.eclipse.acceleo:org.eclipse.acceleo.maven:acceleo-compile deploy
    - stage: uml
      language: java
      script:
        - cd NetflixRouletteUML
        - "mvn org.eclipse.acceleo:org.eclipse.acceleo.maven.launcher:acceleo-launcher"
    - stage: build backend
      install:
        - cp .travis.settings.xml $HOME/.m2/settings.xml
      script:
        - cd NetflixRouletteBackend
        - mvn deploy
- stage: static code analysis
      addons:
        sonarcloud:
          organization: str7946-github
          token: $SONAR_TOKEN
      script:
        - cd NetflixRouletteBackend
        - mvn org.jacoco:jacoco-maven-plugin:prepare-agent javadoc:javadoc verify sonar:sonar
        - cd ..
        - rm -rf NetflixRouletteDocs
        - mkdir -p NetflixRouletteDocs/generated 
        - cp -r NetflixRouletteBackend/target/site/jacoco-ut NetflixRouletteDocs/generated/
        - cp -r NetflixRouletteBackend/target/site/jacoco-it NetflixRouletteDocs/generated/
        - cp -r NetflixRouletteBackend/target/site/apidocs NetflixRouletteDocs/generated/
    - stage: deploy to staging (backend)
      script: skip
      before_deploy:
        - cd NetflixRouletteBackend
      deploy: &heroku
        provider: heroku
        app: netflixroulette-backend-stage
        api_key: $HEROKU_API_KEY
    - stage: Unit test for backend (staging)
      script:
        - cd NetflixRouletteBackend
        - mvn verify
    - stage: deploy to production (backend)
      script: skip
      before_deploy:
        - cd NetflixRouletteBackend
      deploy: &heroku
        provider: heroku
        app: netflixroulette-backend
        api_key: $HEROKU_API_KEY
    - stage: deploy to stage (frontend)
      script: skip
      before_deploy:
        - cd NetflixRouletteFrontend
      deploy:
        <<: *heroku
        app: netflixroulette-stage
    - stage: deploy to production (frontend)
      script: skip
      before_deploy:
        - cd NetflixRouletteFrontend
      deploy:
        <<: *heroku
        app: netflixroulette
    - stage: check production availability
      script: 'curl https://netflixroulette.herokuapp.com/'
